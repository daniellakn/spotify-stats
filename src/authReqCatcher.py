"""
This is a simple concise http server whose only purpose is
to process 1 request, generated by the redirection of the user
after authorizing this app through the browser.

All it does is:
    1) Start HTTP server
    2) Wait for request
    3) Extract authorization code from the URL path
    4) Return the authorization code (used to reqest access and refresh codes)
"""

from http.server import HTTPServer, BaseHTTPRequestHandler
from urllib import parse

code: str = None

class AuthCatcher(BaseHTTPRequestHandler):

    
    def do_GET(self):
        # This method will be called when the GET request is recieved
        
        global code

        # Parse the URL path from the get request
        q = parse.urlparse(self.path).query
        query = parse.parse_qs(q)
        if 'error' in query:
            raise Exception('Spotify: Access Denied')

        if 'code' not in query:
            raise Exception('Spotify: Auth code not present in auth callback')
        
        code = query['code'][0]

        # Send user to spotify.com
        self.send_response_only(307)
        self.send_header('Location', 'https://spotify.com')
        self.end_headers()

def catchTokenResponse(host: str, port: int) -> str:    
    # Starts the HTTP server and captures the authorization code

    # Start the http server
    server = HTTPServer((host, port), AuthCatcher, True)

    # Handle one request
    server.handle_request()

    # Return the token
    return code

